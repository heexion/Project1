//#include <iostream>
//using namespace std;
//
////재귀 함수를 이용한 팩토리얼 구현
////N 팩토리얼은 N!라고 작성하며, N!은 1부터 N까지의 곱을 표현하는 식을 의미합니다.
//
////EX) N=5, N! = 1 * 2 * 3 * 4 * 5
////Factorial(5) 5 * 4 * 3 * 2 * 1
//
//int Factorial(int N )
//{
//	//팩토리얼의 종료 조건
//	if (N == 1)
//		return N;
//	//어떤 작업이 반복되고 있는가? N * ( N - 1 )이 반복되고 있다
//	return N * Factorial(N - 1);
//
//}
//
////2. 피보나치 수열(Fibonacchi numbers)
////다음과 같은 수열을 피보나치 수열이라고 부릅니다.
////1 1 2 3 5 8 13 21 34 55...
////위의 수열의 값을 순서대로 a,b,c라고 할 때 a + b = c를 만족하게 됩니다
////수열의 N번째 값을 F(N)이라고 표현한다면 위의 식은 F(N) + F(N-1) = F(N-2)로 표현이 가능합니다.
//
//int fibo(int N)
//{
//	//규칙의 시작점 => 종료 조건
//	if (N <= 1)
//		return N;
//	//찾아낸 규칙을 그대로 return 합니다.
//	return fibo(N - 1) + fibo(N - 2);
//
//}
//
////피보나치 수열을 출력할 함수
//void FNumbers(int N)
//{
//	//시작 값은 1이기 때문에 1부터 처리합니다.
//	for (int i = 1;i <= N;i++)
//	{
//		cout << fibo(i) << " ";
//	}
//
//	//fibo(1) -> 1
//	//fibo(2) -> f(1)+f(0) = 1 + f(-1) + f(-2)
//	//fibo(3)
//	//fibo(4)
//	//fibo(5)
//	cout << endl;
//}
//
//
//int main()
//{
//	int N;
//	cout << "[팩토리얼 계산기] 숫자를 입력해주세요 >> ";
//	cin >> N;
//	cout << N << "! : " << Factorial(N) << endl;
//
//	//예시) N에 5를 입력했을 경우 (Factorial은 편의상 F로 작성하겠습니다.)
//	// NF를 N이 종료 조건이 아니라고 표현, NT는 N이 종료 조건임이라고 표현하겠습니다.
//	// 
//	//1. F(5) 호출 NF -> return 5 * F(4)
//	//2. F(4) 호출 NF -> return 4 * F(3)
//	//3. F(3) 호출 NF -> return 3 * F(2)
//	//4. F(2) 호출 NF -> return 2 * F(1)
//	//5. F(1) 호출 NF -> return 1
//
//	//그럼 호출이 다 끝난 값을 확인해보면 다음과 같은 식이 return 됩니다.
//	//5*4*3*2*1
//
//	cout << "[피보나치 수열 계산기] 피보나치 수열을 출력하고자 합니다. 몇 개의 수열을 출력하고 싶은지 작성하세요 >> ";
//	cin >> N;
//	FNumbers(N);
//
//	return 0;
//}